package com.guruaakash.andriodmalwaredetection;

import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.content.pm.PackageManager;
import android.content.pm.PermissionGroupInfo;
import android.content.pm.PermissionInfo;
import android.content.pm.ResolveInfo;
import android.os.Bundle;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toolbar;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

public class MainActivity extends AppCompatActivity {

    ListView list;
    TextView t1,t2,t3, mt;

    List<ArrayList<String>> AppList = new ArrayList<ArrayList<String>>();


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        list=(ListView)findViewById(R.id.list);
        t1=findViewById(R.id.t1);
        t2=findViewById(R.id.t2);
        t3=findViewById(R.id.t3);
        mt = findViewById(R.id.mt);

        PackageManager pm = getPackageManager();
        final Intent query = new Intent(Intent.ACTION_MAIN, null);
        query.addCategory(Intent.CATEGORY_LAUNCHER);
        List<ResolveInfo> resolves = pm.queryIntentActivities(query, 0);//PackageManager.GET_ACTIVITIES

        for (int i = 0; i < resolves.size(); i++) {

            ResolveInfo resolveInfo = resolves.get(i);
            String packageName = resolveInfo.loadLabel(pm).toString();
            String[] permission;

            try {
                // get permission list
                permission = pm.getPackageInfo(resolveInfo.activityInfo.packageName,PackageManager.GET_PERMISSIONS).requestedPermissions;
                String[] permission_details = getPermissionDetails(permission);
                double malwareRate = getMalwareRateOfModel(permission_details);

                if(malwareRate < 0.4){
                    AppList.add(new ArrayList<String>(Arrays.asList(packageName, "No Thread Found")));
                }
                else{
                    AppList.add(new ArrayList<String>(Arrays.asList(packageName, "Thread Found")));
                }


            } catch (PackageManager.NameNotFoundException e) {
                e.printStackTrace();
            }

        }

        Collections.sort(AppList, new Comparator<ArrayList<String>>() {
            @Override
            public int compare(ArrayList<String> o1, ArrayList<String> o2) {
                return o1.get(0).compareTo(o2.get(0));
            }
        });

        String[] maintitle = new String[AppList.size()];
        String[] subtitle = new String[AppList.size()];
        int malicious = 0;

        for(int i=0; i<AppList.size();i++){

            maintitle[i] = (String) AppList.get(i).get(0);
            subtitle[i] = (String) AppList.get(i).get(1);
            if(subtitle[i].equals("Thread Found")){
                malicious = malicious + 1;
            }
        }

        int nonmalicious = AppList.size() - malicious;

        if(malicious==0){
            mt.setText("YOU ARE SAFE !!!");
            mt.setBackgroundColor(getResources().getColor(R.color.green));
        }
        else{
            mt.setText("YOU ARE NOT SAFE !!!");
            mt.setBackgroundColor(getResources().getColor(R.color.red));
        }

        t1.setText("Total number of apps found : "+AppList.size());
        t2.setText("Number of apps detected as malicious : "+malicious);
        t3.setText("Number of apps detected as non-malicious : "+ nonmalicious);

        ListAdapter adapter = new ListAdapter(this, maintitle, subtitle);
        list.setAdapter(adapter);
        //ArrayAdapter adapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1,  AppList);
        //getListView().setAdapter(adapter);



    }

    public String[] getPermissionDetails(String[] permission){
        String[] permissionDetails = new String[permission.length];
        for(int i=0; i<permission.length;i++){
            String strPermissionInfo = "";
            try {
                PackageManager pm = MainActivity.this.getPackageManager();
                PermissionInfo permissionInfo = pm.getPermissionInfo(permission[i], 0);
                PermissionGroupInfo permissionGroupInfo = pm.getPermissionGroupInfo( permissionInfo.group, 0);

                strPermissionInfo = "[" + permissionGroupInfo.loadLabel(pm).toString() + "] " +
                        permissionInfo.loadLabel(pm).toString() + "\n";

                permissionDetails[i] = strPermissionInfo;

            } catch (PackageManager.NameNotFoundException e) {
                // use our func if permission info not matched
                permissionDetails[i] = "";
            }
        }

        return permissionDetails;
    }

    public double getMalwareRateOfModel(String[] permission_details){
        double[] malware_detection = selected_permission(permission_details);
        double[] model_feature_importance = {0.07978125, 0.07889728, 0.09000892, 0.04027826, 0.14595453,
                0.04494357, 0.03760084, 0.01573629, 0.02854616, 0.09166918,
                0.00457441, 0.03586736, 0.03140077, 0.01498246, 0.00388342,
                0.06302691, 0.01048477, 0.05337407, 0.01245373, 0.01917694,
                0.02288372, 0.03583926, 0.00869369, 0.01017805, 0.01495391,
                0.00448882, 0.00032142};
        double malwareRate = 0;

        for (int i = 0; i < model_feature_importance.length; i++) {
            malwareRate = malwareRate + malware_detection[i]*model_feature_importance[i];
        }

        return malwareRate;
    }

    public double[] selected_permission(String[] strPermission){

        double[] malware_detection = new double[27];

        for (int i = 0; i < strPermission.length; i++) {

            if(strPermission[i].equals("transact")){
                malware_detection[0] = 1;
            }
            else if(strPermission[i].equals("onServiceConnected")){
                malware_detection[1] = 1;
            }
            else if(strPermission[i].equals("bindService")){
                malware_detection[2] = 1;
            }
            else if(strPermission[i].equals("attachInterface")){
                malware_detection[3] = 1;
            }
            else if(strPermission[i].equals("SEND_SMS")){
                malware_detection[4] = 1;
            }
            else if(strPermission[i].equals("Ljava.lang.Class.getCanonicalName")){
                malware_detection[5] = 1;
            }
            else if(strPermission[i].equals("Ljava.lang.Class.getMethods")){
                malware_detection[6] = 1;
            }
            else if(strPermission[i].equals("Ljava.net.URLDecoder")){
                malware_detection[7] = 1;
            }
            else if(strPermission[i].equals("android.telephony.SmsManager")){
                malware_detection[8] = 1;
            }
            else if(strPermission[i].equals("READ_PHONE_STATE")){
                malware_detection[9] = 1;
            }
            else if(strPermission[i].equals("getBinder")){
                malware_detection[10] = 1;
            }
            else if(strPermission[i].equals("GET_ACCOUNTS")){
                malware_detection[11] = 1;
            }
            else if(strPermission[i].equals("RECEIVE_SMS")){
                malware_detection[12] = 1;
            }
            else if(strPermission[i].equals("READ_SMS")){
                malware_detection[13] = 1;
            }
            else if(strPermission[i].equals("getCallingUid")){
                malware_detection[14] = 1;
            }
            else if(strPermission[i].equals("android.permission.RECEIVE_BOOT_COMPLETED")){
                malware_detection[15] = 1; //android.intent.action.BOOT_COMPLETED
            }
            else if(strPermission[i].equals("USE_CREDENTIALS")){
                malware_detection[16] = 1;
            }
            else if(strPermission[i].equals("TelephonyManager.getLine1Number")){
                malware_detection[17] = 1;
            }
            else if(strPermission[i].equals("android.intent.action.SEND")){
                malware_detection[18] = 1;
            }
            else if(strPermission[i].equals("android.telephony.gsm.SmsManager")){
                malware_detection[19] = 1;
            }
            else if(strPermission[i].equals("WRITE_HISTORY_BOOKMARKS")){
                malware_detection[20] = 1;
            }
            else if(strPermission[i].equals("TelephonyManager.getSubscriberId")){
                malware_detection[21] = 1;
            }
            else if(strPermission[i].equals("INSTALL_PACKAGES")){
                malware_detection[22] = 1;
            }
            else if(strPermission[i].equals("createSubprocess")){
                malware_detection[23] = 1;
            }
            else if(strPermission[i].equals("ACCESS_LOCATION_EXTRA_COMMANDS")){
                malware_detection[24] = 1;
            }
            else if(strPermission[i].equals("MASTER_CLEAR")){
                malware_detection[25] = 1;
            }
            else if(strPermission[i].equals("BIND_INPUT_METHOD")){
                malware_detection[26] = 1;
            }
        }

        return malware_detection;
    }
}